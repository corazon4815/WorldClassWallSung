-- drop database project1;
-- create database project1;

use project1;

CREATE TABLE TYPE_TB -- 분류
(
    `MEM_NO`  INT            NOT NULL        COMMENT '멤버번호', 
    `JOB`     VARCHAR(20)    NULL            COMMENT '분류', 
    PRIMARY KEY (MEM_NO)
);

create table DEPT_TB (
    DEPT_CD varchar(20)     NOT NULL  COMMENT '학과코드', 
    DEPT_NM VARCHAR(45)     NOT NULL  COMMENT '학과명',
    primary key(DEPT_CD)
);

CREATE TABLE STUDENT_TB -- 학생
(
    `STU_NO`       INT            NOT NULL    COMMENT '학생번호', 
    `DEPT_CD`      VARCHAR(20)    NOT NULL    COMMENT '학과코드', 
    `MEM_NO`       INT            NOT NULL    COMMENT '멤버번호', 
    `STU_NAME`     VARCHAR(20)    NULL        COMMENT '학생명', 
    `STU_PWD`      VARCHAR(45)    NULL        COMMENT '비밀번호', 
    `STU_BIRTH`    VARCHAR(20)    NULL        COMMENT '생년월일', 
    `STU_YEAR`     INT            NULL        COMMENT '학년', 
    `STU_SEM`      VARCHAR(20)    NULL        COMMENT '현재학기', 
    `STU_ADDRESS`  TEXT           NULL        COMMENT '주소', 
    `STU_ZIP`      VARCHAR(45)            NULL        COMMENT '우편번호', 
    `STU_TEL`      VARCHAR(45)    NULL        COMMENT '연락처', 
    `STU_EMAIL`    VARCHAR(45)    NULL        COMMENT '이메일', 
    `STU_COUN`     VARCHAR(20)    NULL        COMMENT '국적', 
    `STU_GEN`      VARCHAR(20)    NULL        COMMENT '성별', 
    `STATE`        VARCHAR(20)    NULL        COMMENT '상태', 
    `STU_PATH`     TEXT           NULL        COMMENT '사진파일경로', 
    PRIMARY KEY (STU_NO)
	,foreign key (MEM_NO) REFERENCES TYPE_TB (MEM_NO) on delete cascade
);

CREATE TABLE SUBJECT_TB -- 강의
(
    `SUB_CD`       INT            NOT NULL    COMMENT '강의코드', 
    `DEPT_CD`      VARCHAR(20)    NULL        COMMENT '학과코드',
    `SUB_NM`       VARCHAR(45)    NULL        COMMENT '강의명',
    `SUBROOM_NM`   VARCHAR(20)    NOT NULL    COMMENT '강의실명',
    `PROF_CD`      INT            NULL        COMMENT '교수번호', 
    `ISU`          VARCHAR(20)    NULL        COMMENT '이수구분', 
    `CREDIT`       INT            NULL        COMMENT '학점',
    `ATTEND_MEM`   INT            NULL        COMMENT '신청인원', 
    `MAX_MEM`      INT            NULL        DEFAULT 60 COMMENT '최대인원', 
    `SUB_PATH`     TEXT           NULL        COMMENT '강의 계획서 경로', 
    `WEEK`         VARCHAR(20)    NULL        COMMENT '요일', 
    `LEC_1` 	   INT            NULL        COMMENT '교시1',
    `LEC_2` 	   INT            NULL        COMMENT '교시2',
    `LEC_3` 	   INT            NULL        COMMENT '교시3',
    `YEARS` 	   INT            NULL        COMMENT '개강연도',
    `SEM`          VARCHAR(20)    NULL        COMMENT '학기',
    `SUB_STATE`    VARCHAR(20)    NULL        DEFAULT '미승인' COMMENT '처리상태', 
    `noclass_dt`  timestamp not null default now()  COMMENT '휴강신청날짜', 
    `noclass_state`  VARCHAR(45)	NULL        COMMENT '휴강처리상태', 
    
    PRIMARY KEY (SUB_CD)
);

CREATE TABLE SERVICE_TB -- 봉사활동
(
    `SER_NO`      INT            NOT NULL    AUTO_INCREMENT COMMENT '순번',
    `STU_NO`      INT            NULL        COMMENT '학생번호', 
    `SER_START`   DATE           NULL        COMMENT '활동시작일', 
    `SER_FINISH`  DATE           NULL        COMMENT '활동종료일', 
    `SER_TIME`    INT            NULL        COMMENT '봉사시간', 
    `SER_CON`     VARCHAR(45)    NULL        COMMENT '활동내용', 
    `SER_FILE`    VARCHAR(45)    NULL        COMMENT '파일명', 
    `SER_PATH`    TEXT           NULL        COMMENT '파일경로', 
    PRIMARY KEY (SER_NO)
	,foreign key (STU_NO) REFERENCES STUDENT_TB (STU_NO) on delete cascade
);

CREATE TABLE GRADE_TB -- 성적등급
(
    `GRADE`      VARCHAR(45)    NULL    COMMENT '등급',  
    `MIN_GRADE`  INT            NULL    COMMENT '최소', 
    `MAX_GRADE`  INT            NULL    COMMENT '최대',
    `SCORE`      DOUBLE         NULL    COMMENT '평점'
);

CREATE TABLE CLASS_CANCEL_TB -- 휴강 신청
(
    `CAN_NO`     INT             NOT NULL    AUTO_INCREMENT COMMENT '순번', 
    `SUB_CD`     VARCHAR(20)     NOT NULL    COMMENT '강의코드', 
    `CAN_DT`     DATE            NULL        COMMENT '휴강일자', 
    `SUP_DT`     DATE            NULL        COMMENT '보강일자', 
    `CAN_IU`     VARCHAR(200)    NULL        COMMENT '휴강사유', 
    `CAN_STATE`  VARCHAR(20)     NULL        DEFAULT '미승인' COMMENT '처리상태'
    ,PRIMARY KEY (CAN_NO)
);

CREATE TABLE REPORT_TB -- 레포트 제출
(
    `STU_NO`        INT            NOT NULL    COMMENT '학생번호', 
    `SUB_CD`        VARCHAR(20)    NOT NULL    COMMENT '강의코드', 
    `REPORT_FILE`   VARCHAR(45)    NULL        COMMENT '레포트파일명', 
    `REPORT_PATH`   TEXT           NULL        COMMENT '파일경로', 
    `REPORT_STATE`  VARCHAR(20)    NULL        DEFAULT '미열람' COMMENT '열람상태', 
    `REPORT_DT`     timestamp not null default now()        COMMENT '제출일자', 
    `REPORT_NM`     VARCHAR(45)    NULL        COMMENT '제목', 
    PRIMARY KEY (STU_NO, SUB_CD),
    FOREIGN KEY (STU_NO) REFERENCES STUDENT_TB (STU_NO) ON DELETE CASCADE
);

CREATE TABLE COUNSELING_TB
(
    `CS_NO`     INT            NOT NULL    AUTO_INCREMENT COMMENT '순번', 
    `SUB_CD`    VARCHAR(20)    NULL        COMMENT '강의코드', 
    `CS_DATE`   DATE           NULL        COMMENT '신청일자', 
    `STU_NO`    INT            NOT NULL    COMMENT '학생번호', 
    `CS_NM`     VARCHAR(45)    NULL        COMMENT '상담제목', 
    `CS_CON`    TEXT           NULL        COMMENT '상담내용', 
    `CS_STATE`  VARCHAR(20)    NULL        DEFAULT '미승인' COMMENT '처리상태', 
    PRIMARY KEY (CS_NO),
    FOREIGN KEY (STU_NO) REFERENCES STUDENT_TB (STU_NO) ON DELETE CASCADE
);

CREATE TABLE ESTIMATION_TB
(
    `STU_NO`  INT            NOT NULL    COMMENT '학생번호', 
    `SUB_CD`  VARCHAR(20)    NOT NULL    COMMENT '강의코드', 
    `NO1`     INT            NULL        COMMENT '1번 문항', 
    `NO2`     INT            NULL        COMMENT '2번 문항', 
    `NO3`     INT            NULL        COMMENT '3번 문항', 
    `NO4`     INT            NULL        COMMENT '4번 문항', 
    `NO5`     INT            NULL        COMMENT '5번 문항', 
    `NO6`     INT            NULL        COMMENT '6번 문항', 
    `NO7`     INT            NULL        COMMENT '7번 문항', 
    `NO8`     INT            NULL        COMMENT '8번 문항', 
    `NO9`     INT            NULL        COMMENT '9번 문항', 
    `NO10`    INT            NULL        COMMENT '10번문항', 
    PRIMARY KEY (STU_NO, SUB_CD)
);

CREATE TABLE SUBJECT_ROOM_TB -- 강의실
(
    `BUIL_NO`  VARCHAR(20)  NULL    	COMMENT '건물명',
    `SUBROOM_NM`   VARCHAR(20)  NOT NULL    COMMENT '강의실명',
    PRIMARY KEY (SUBROOM_NM)
);

CREATE TABLE LICENSE_TB
(
    `LI_NO`    INT          NOT NULL   AUTO_INCREMENT COMMENT '순번', 
    `STU_NO`   INT          NULL       COMMENT '학생번호', 
    `LI_NM`    VARCHAR(45)  NULL       COMMENT '자격증명', 
    `LI_FILE`  VARCHAR(45)  NULL       COMMENT '파일명', 
    `LI_DATE`  DATE         NULL       COMMENT '취득일자', 
    `LI_PATH`  TEXT         NULL       COMMENT '파일경로',
    PRIMARY KEY (LI_NO)
);
ALTER TABLE LICENSE_TB ADD foreign key(STU_NO) references STUDENT_TB(STU_NO);


CREATE TABLE STAFF_TB
(
    `STAFF_NO`      INT           NOT NULL      COMMENT '교직원번호', 
    `MEM_NO`        INT           NOT NULL  COMMENT '멤버번호', 
    `STAFF_PATH`    TEXT          NULL      COMMENT '사진파일경로', 
    `STAFF_NM`      VARCHAR(20)   NULL      COMMENT '교직원명', 
    `STAFF_PWD`     VARCHAR(45)   NULL      COMMENT '비밀번호', 
    `STAFF_GEN`     VARCHAR(20)   NULL      COMMENT '성별', 
    `STAFF_COUN`    VARCHAR(20)   NULL      COMMENT '국적', 
    `STAFF_TEL`     VARCHAR(45)   NULL      COMMENT '연락처', 
    `STAFF_DEPT`    VARCHAR(20)   NULL      COMMENT '부서', 
    `STAFF_EMAIL`   VARCHAR(45)   NULL      COMMENT '이메일', 
    `STAFF_ZIP`     VARCHAR(45)           NULL      COMMENT '우편번호', 
    `STAFF_ADDRESS`  TEXT         NULL      COMMENT '주소', 
    `STAFF_BIRTH`   VARCHAR(45)           NULL      COMMENT '생년월일', 
    PRIMARY KEY (STAFF_NO)
);


CREATE TABLE LEAVE_TB
(
    `NO`            INT          NOT NULL    AUTO_INCREMENT COMMENT '순번', 
    `STU_NO`        INT          NULL        COMMENT '학생번호', 
    `LEAVE_CHANGE`  VARCHAR(20)  NULL        COMMENT '학적변동', 
    `LEAVE_STATE`   VARCHAR(20)  not null    DEFAULT '미승인'  COMMENT '처리상태', 
    `LEAVE_YEAR`    VARCHAR(20)  NULL        COMMENT '휴학할연도', 
    `LEAVE_SEM`     VARCHAR(20)  NULL        COMMENT '휴학할학기', 
    `LEAVE_DT`  timestamp not null default now()  COMMENT '현재신청일자',  
    PRIMARY KEY (NO)
);
ALTER TABLE LEAVE_TB ADD foreign key(STU_NO) references STUDENT_TB(STU_NO) ON DELETE CASCADE;

create table ATTEND_TB(
    STU_NO          INT         NOT NULL    COMMENT '학생번호',
    SUB_CD          INT 		NOT NULL    COMMENT '강의코드',
    MID_SCORE       INT         null        COMMENT '중간성적',
    END_SCORE       INT         null        COMMENT '기말성적',
    REPORT_SCORE    INT         null        COMMENT '과제점수',
    ATTEND_SCORE    INT         null        COMMENT '출결점수',
    ATTEND_SUM      INT         null        COMMENT '총합',
    ATTEND_GRADE    VARCHAR(20) null        COMMENT '등급',
    ATTEND_RATING   VARCHAR(20) null        COMMENT '평점'
);
ALTER TABLE ATTEND_TB ADD PRIMARY KEY (STU_NO, SUB_CD);
ALTER TABLE ATTEND_TB ADD foreign key(SUB_CD) references SUBJECT_TB(SUB_CD) ON DELETE CASCADE;
ALTER TABLE ATTEND_TB ADD foreign key(STU_NO) references STUDENT_TB(STU_NO) ON DELETE CASCADE;


create table PROFESSOR_TB(
MEM_NO          INT             NOT NULL    COMMENT '멤버번호',
PROF_CD         INT             NOT NULL    COMMENT '교수번호',
DEPT_CD         VARCHAR(20)     null        COMMENT '학과코드',
PROF_NM         VARCHAR(20)     null        COMMENT '교수명',
PROF_PWD        VARCHAR(45)     null        COMMENT '비밀번호',
PROF_ADDRESS    TEXT            null        COMMENT '주소',
PROF_ZIP        VARCHAR(45)             null        COMMENT '우편번호',
PROF_TEL        VARCHAR(45)     null        COMMENT '연락처',
PROF_EMAIL      VARCHAR(45)     null        COMMENT '이메일',
PROF_COUN       VARCHAR(20)     null        COMMENT '국적',
PROF_GEN        VARCHAR(20)     null        COMMENT '성별',
PROF_BIRTH      VARCHAR(45)            null        COMMENT '생년월일',
PROF_PATH       TEXT            null        COMMENT '사진파일경로'
);
ALTER TABLE PROFESSOR_TB ADD PRIMARY KEY (PROF_CD);

CREATE TABLE BOARD_TB
(
    `NO`        INT            NOT NULL    AUTO_INCREMENT COMMENT '순번', 
    `MEM_NO`    INT            NULL    COMMENT '멤버번호', 
    `HORSE`     VARCHAR(20)    NULL    COMMENT '말머리', 
    `TITLE`     VARCHAR(45)    NULL    COMMENT '제목', 
    `CONTENT`   TEXT           NULL    COMMENT '내용', 
    `BOARD_DT`  timestamp not null default now()    COMMENT '등록일자', 
    `HIT`       INT            NULL    COMMENT '조회수', 
    `WRITER`    VARCHAR(20)    NULL    COMMENT '작성자', 
    PRIMARY KEY (NO)
);

CREATE TABLE SUBJECT_BOARD_TB
(
    `NO`        INT            NOT NULL     AUTO_INCREMENT COMMENT '순번', 
    `DEPT_CD`   VARCHAR(20)    NULL         COMMENT '학과코드', 
    `TITLE`     VARCHAR(45)    NULL         COMMENT '제목', 
    `CONTENT`   TEXT           NULL         COMMENT '내용', 
    `MEM_NO`    INT            NULL         COMMENT '멤버번호', 
    `HIT`       INT            NULL         COMMENT '조회수', 
    `BOARD_DT`  timestamp not null default now()         COMMENT '등록일자', 
    `WRITER`    VARCHAR(20)    NULL         COMMENT '작성자', 
    PRIMARY KEY (NO)
);

CREATE TABLE QNA_TB
(
    `NO`        INT            NOT NULL    AUTO_INCREMENT COMMENT '순번', 
    `TITLE`     VARCHAR(45)    NULL        COMMENT '제목', 
    `MEM_NO`    INT            NULL        COMMENT '멤버번호', 
    `HIT`       VARCHAR(45)    NULL        COMMENT '조회수', 
    `BOARD_DT`  timestamp not null default now()  COMMENT '등록일자', 
    `CONTENT`   TEXT           NULL        COMMENT '내용',
    `WRITER`    VARCHAR(20)    NULL        COMMENT '작성자', 
    PRIMARY KEY (NO)
);